#!/usr/bin/env python3
"""
Test to verify that pronunciation input fields are displayed in the entry form.
"""

import pytest
import sys
import os

# Add the app directory to the Python path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import create_app
from app.services.dictionary_service import DictionaryService
from flask import current_app


def test_pronunciation_fields_in_entry_form():
    """Test that pronunciation input fields are rendered in the entry form for entries with pronunciation data."""
    
    app = create_app()
    
    with app.test_client() as client:
        with app.app_context():
            # Get the dictionary service
            service = current_app.injector.get(DictionaryService)
            
            # Find an entry with pronunciation data
            search_result = service.search_entries("", limit=50)
            entries, total_count = search_result
            
            entry_with_pronunciation = None
            for entry in entries:
                if hasattr(entry, 'pronunciations') and entry.pronunciations:
                    entry_with_pronunciation = entry
                    break
            
            assert entry_with_pronunciation is not None, "No entry with pronunciation data found"
            
            print(f"Testing entry: {entry_with_pronunciation.lexical_unit}")
            print(f"Entry ID: {entry_with_pronunciation.id}")
            print(f"Pronunciations: {repr(entry_with_pronunciation.pronunciations)}")  # Use repr to avoid Unicode issues
            
            # Get the entry form HTML
            response = client.get(f'/entries/{entry_with_pronunciation.id}/edit')
            assert response.status_code == 200
            
            html_content = response.get_data(as_text=True)
            
            # Check that the pronunciation container is present
            assert 'id="pronunciation-container"' in html_content, "Pronunciation container not found in HTML"
            
            # Check that the PronunciationFormsManager is initialized
            assert 'PronunciationFormsManager' in html_content, "PronunciationFormsManager not found in HTML"
            
            # Check that pronunciation data is passed to JavaScript
            # The pronunciation data should be in the JavaScript initialization
            assert '"seh-fonipa"' in html_content or 'seh-fonipa' in html_content, "Pronunciation language code not found"
            
            # Look for the pronunciation value in the HTML
            pronunciation_value = list(entry_with_pronunciation.pronunciations.values())[0]
            print(f"Looking for pronunciation value: '{pronunciation_value}'")
            
            # Check if it's anywhere in the HTML (might be escaped)
            if pronunciation_value in html_content:
                print("✅ Found pronunciation value in HTML")
            else:
                print("❌ Pronunciation value not found in HTML")
                # Try to find it with different escaping
                escaped_value = pronunciation_value.replace("'", "\\'")
                if escaped_value in html_content:
                    print("✅ Found escaped pronunciation value in HTML")
                else:
                    print("❌ Escaped pronunciation value not found either")
                    
                    # Try JSON escaping
                    import json
                    json_escaped = json.dumps(pronunciation_value)
                    if json_escaped in html_content:
                        print("✅ Found JSON-escaped pronunciation value in HTML")
                    else:
                        print("❌ JSON-escaped pronunciation value not found either")
            
            # Print part of the HTML around the pronunciation section for debugging
            pronunciation_section_start = html_content.find('pronunciation-container')
            if pronunciation_section_start != -1:
                section_start = max(0, pronunciation_section_start - 500)
                section_end = min(len(html_content), pronunciation_section_start + 1500)
                print("\n--- Pronunciation section in HTML ---")
                print(html_content[section_start:section_end])
                print("--- End of section ---\n")
            
            # Check for the specific input field structure that should be generated by JS
            # Since the JS runs client-side, we can't test the final rendered state here
            # But we can check that the JS initialization is present
            js_section_start = html_content.find('PronunciationFormsManager')
            if js_section_start != -1:
                js_section_start = max(0, js_section_start - 200)
                js_section_end = min(len(html_content), js_section_start + 800)
                print("\n--- JavaScript initialization section ---")
                print(html_content[js_section_start:js_section_end])
                print("--- End of JS section ---\n")
            
            print("✅ Test passed: Pronunciation form structure is present in HTML")


if __name__ == "__main__":
    test_pronunciation_fields_in_entry_form()
